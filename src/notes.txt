* if docker commands are really slow,

  disable IPv6 on all network connections.

* Catalog.API microservice essential dependencies:

  Microsoft.eShopOnContainers.Services.CatalogDb database
  rabbitmq, using rabbitmq container

* create or start rabbitmq

  docker run -p 5672:5672 --name myrabbitmq rabbitmq:3-management-alpine

  docker create -p 5672:5672 --name myrabbitmq rabbitmq:3-management-alpine

* Microsoft Identity Server documentation

  https://identityserver4.readthedocs.io/en/latest/

* docker compose network

  the service name(container name) in services of docker-compose.yml
  is also the host name in the private network created for docker compose.

  By default Compose sets up a single network for your app.
  Each container for a service joins the default network and is both reachable by other containers on that network,
  and discoverable by them at a hostname identical to the container name.

  https://docs.docker.com/compose/networking/

* access host network from container,

  use "host.docker.internal" host name,
  envoy proxy only runs under linux,
  we want to configure it to access web apis running in iisexpress on host.

* all environment changes to be put in launchSettings.json,
  this makes sure other development environment is not affected

* docker, execute commands in container

  docker exec -it 64c4d771a91b sh
  apk add curl
  curl -X GET "http://host.docker.internal:57424/api/v1/Catalog/items?pageSize=10" -H "accept: text/plain"

* to allow iisexpress to accept external requests

  reference:
  https://blog.kloud.com.au/2017/02/27/remote-access-to-local-aspnet-core-apps-from-mobile-devices/
  https://stackoverflow.com/questions/4866547/binding-iis-express-to-an-ip-address

  solution:
  open ".vs\eShopOnContainers-ServicesAndWebApps\config\applicationhost.config" under soltion folder
  find site binding, for example "<binding protocol="http" bindingInformation="*:57424:localhost" />"
  change it to "<binding protocol="http" bindingInformation="*:57424:" />"
  this allows iisexpress to accept external requests

  AND START VISUAL STUDIO IN ADMINISTRATOR MODE!!!!!

* WebMVC authentication,

  in Startup, AddOpenIdConnect adds OpenIdConnect authentication
  "[Authorize(AuthenticationSchemes = "OpenIdConnect")]" makes sure the controller actions are authenticated
  once it is authenticated, the action executes,
  this applies to "AccountController.SignIn" controller action as well.

* Identity_API unauthorized_client issue:

  https://github.com/dotnet-architecture/eShopOnContainers/issues/1236

  add "MvcClient" client url to the launchSettings environment variables

* Identity Server login works in Edge and IE, but not in Chrome
  both WebMVC and WebSPA does not work in Chrome, they all works in Edge

  [Authorize(AuthenticationSchemes = "OpenIdConnect")] of AccountController.SignIn(WebMVC) redirects to IdentityServer
  after login, Identity server redirects to /connect/authorize/callback?client_id=mvc&redirect_uri=http://localhost://signin-oidc
  and then, it redirects to http://localhost://signin-oidc
  AccountController.SignIn(WebMVC) is called, user is signed in

* Identity server redirect does not work for WebSPA as well,

  Content-Security-Policy and identity server 4

  Invesigate later by creating vanilla identity server 4 project.

  